<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEACACoDgAAFgAAACgAAAAwAAAAYAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///8AT09PABsbGwBqamoA4+PjAP39/QD4+PgAAAAAABEREQDExMQAy8vLADQ0NABBQUEA9fX1ABIS
        EgDp6ekAk5OTAAQEBAB4eHgAyMjIAA4ODgAtLS0AkZGRAL29vQAnJycAysrKAAkJCQA1NTUA3NzcAPr6
        +gBNTU0ABQUFAKurqwD5+fkARUVFAAICAgBGRkYAzMzMAAcHBwAPDw8AXV1dAPz8/ABaWloAVFRUAL6+
        vgDv7+8AJiYmAF9fXwB/f38Abm5uAHp6egAMDAwAICAgAJ+fnwCvr68ALy8vALGxsQDb29sA39/fAP7+
        /gCDg4MAaGhoAKSkpAAsLCwAlpaWANPT0wCMjIwA6+vrABQUFADS0tIAb29vAFZWVgAfHx8ANjY2AIqK
        igCPj48Anp6eAPDw8ACHh4cAubm5AIGBgQA5OTkAz8/PAPPz8wDl5eUAGRkZADo6OgBsbGwAo6OjAD8/
        PwD39/cAYGBgAAEBAQB3d3cA+/v7AOHh4QChoaEAp6enAOrq6gBCQkIAdnZ2AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE1kAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAATUlZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABNSQdZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE1JBwdZAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATUkHBwdjAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABNSQcHB0RFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAE1JBwcHREUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATUkH
        BwdERQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABNSQcHB0RFAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE1JBwcHREUAAAA5AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAATUkHBwdERQAAADgiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABNSQcHB0RFAAAAOB9ZAAAAAAAAAAAAAAAAAF9gS2FiAAAAAAAAAAAAAAAAAAAAAE1JBwcHREUA
        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
        AAABAgMEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>